{"version":3,"sources":["components/Header/Header.js","components/ScanFormPage/ScanFormPage.js","components/ScanResultsPage/ScanResultsPage.js","components/ViewScanResult/ViewScanResult.js","utils/history.js","App.js","serviceWorker.js","index.js","Constants.js"],"names":["TemporaryDrawer","className","useStyles","makeStyles","theme","root","maxWidth","margin","bullet","display","transform","title","fontSize","fontWeight","pos","marginBottom","form","spacing","width","ScanFormPage","props","classes","useState","type","setType","ruleId","setRuleId","path","setPath","lineNumber","setLineNumber","severity","setSeverity","status","setStatus","description","setDescription","repositryName","setRepositryName","findings","setFindings","a","timestamp","Date","now","tempQueuedAt","tempScanningAt","tempFinishedAt","data","repositoryName","queuedAt","scanningAt","finishedAt","axios","post","leadResponse","history","push","console","log","style","flexDirection","justifyContent","padding","Grid","item","xs","ThemeProvider","Button","textTransform","button","onClick","color","Provider","value","size","alignItems","Card","variant","CardContent","Typography","gutterBottom","noValidate","autoComplete","TextField","required","id","label","helperText","onChange","event","target","select","SelectProps","native","Constants","STATUS","map","option","key","length","SEVERITY","multiline","rows","disabled","tempFindings","temp","handleAddFindings","paddingTop","handleSubmitButton","menuTheme","createMuiTheme","shadows","dummy","table","setTable","tableShow","setTableShow","anchorEl","setAnchorEl","currentItem","setCurrentItem","fetchData","get","response","config","params","scanId","delete","handleClose","useEffect","container","paddingLeft","md","ListItem","backgroundColor","textAlign","ListItemText","primary","Fragment","filteredData","marginTop","cursor","pathname","handleScanIdClick","Badge","badgeContent","parseInt","toLocaleString","aria-controls","aria-haspopup","e","currentTarget","handleClickEllipsis","Menu","open","Boolean","onClose","boxShadow","MenuItem","menu","direction","handleDeleteScanResult","Divider","renderBasedOnTable","paramScanId","fetchScanResult","match","metadata","location","positions","begin","line","createBrowserHistory","App","exact","component","FormResults","FormPage","ViewScanResult","to","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3c954d63.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\n\n\nexport default function TemporaryDrawer() {\n  \n  return (\n    <div>\n        <div className=\"header\">\n            <label>Security Scan</label> \n        </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Header from '../Header/Header'\nimport TextField from '@material-ui/core/TextField';\nimport Constants from '../../Constants';\nimport axios from 'axios';\nimport VisibilityIcon from '@material-ui/icons/Visibility';import Grid from '@material-ui/core/Grid';\nimport { IconContext } from 'react-icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n    margin: 40\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 18,\n    fontWeight:'bold'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  form:{\n    '& .MuiTextField-root': {\n      margin: theme.spacing(2),\n      width: '25ch',\n    },\n  },\n}));\n\n\n\n\nexport default function ScanFormPage(props) {\n  const classes = useStyles();\n  const [type, setType] = useState('');\n  const [ruleId, setRuleId] = useState('');\n  const [path, setPath] = useState('');\n  const [lineNumber, setLineNumber] = useState('');\n  const [severity, setSeverity] = useState(\"LOW\");\n  const [status, setStatus] = useState(\"QUEUED\");\n  const [description, setDescription] = useState('')\n  const [repositryName, setRepositryName] = useState('')\n  const [findings, setFindings] = useState([])\n\n\n  function handleTypeChange(event) {\n      setType(event.target.value)\n  }\n  function handleRuleIdChange(event) {\n    setRuleId(event.target.value)\n  }\n\n  function handlePathChange(event) {\n    setPath(event.target.value)\n  }\n\n  function handleLineNumberChange(event) {\n    setLineNumber(event.target.value)\n  }\n  function handleSeverity(event) {\n    setSeverity(event.target.value)\n  }\n\n  function handleStatus(event) {\n    setStatus(event.target.value)\n  }\n\n  function handleDescrptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleRepositryNameChange(event){\n      setRepositryName(event.target.value)\n  }\n\n  function handleAddFindings(){\n    let tempFindings = findings\n    console.log('temp', tempFindings)\n    let temp = {\n      \"type\": type,\n      \"ruleId\": ruleId,\n      \"location\": {\n        \"path\": path,\n        \"positions\": {\n          \"begin\": {\n            \"line\": lineNumber\n          }\n        }\n      },\n      \"metadata\": {\n        \"description\": description,\n        \"severity\": severity\n      }\n}\n    tempFindings.push(temp)\n    console.log(findings.length)\n    setFindings(tempFindings)\n    setType('')\n    setRuleId('')\n    setPath('')\n    setLineNumber('')\n    setDescription('')\n    setSeverity('LOW')\n\n  }\n  async function handleSubmitButton(){\n\n    let timestamp = Date.now()\n    let tempStatus = status\n    let tempRepositryName = repositryName\n    let tempFindings = findings\n    let tempQueuedAt, tempScanningAt, tempFinishedAt\n    if(status == 'QUEUED'){\n      tempQueuedAt = timestamp\n    } else if(status == 'IN PROGRESS'){\n      tempScanningAt = timestamp\n    } else{\n      tempFinishedAt = timestamp\n    }\n    let data = {\n        status: tempStatus,\n        repositoryName: tempRepositryName,\n        findings: tempFindings,\n        queuedAt: tempQueuedAt !== '' ? tempQueuedAt : '',\n        scanningAt: tempScanningAt !== '' ? tempScanningAt : '',\n        finishedAt: tempFinishedAt !== '' ? tempFinishedAt : '',\n    }\n    try{\n        let leadResponse = await axios.post('http://localhost:5000/addNewScanResult', data);\n        props.history.push('/scan-results');\n\n        console.log(leadResponse)\n    } catch(err){\n        console.log(err)\n    }\n   \n\n  }\n\n  return (\n      <div>\n          <Header/>\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                <div className=\"backbutton\" style={{ padding:16 }}>\n                    <Grid item xs>\n\n                        <ThemeProvider >\n\n                            <Button style={{ textTransform: \"none\", fontSize: \"1em\" }} className={classes.button} onClick={() => props.history.push('/scan-results')}  color=\"primary\" >\n                                <IconContext.Provider value={{ size: \"1.5em\" }}>\n                                    <VisibilityIcon />\n                                </IconContext.Provider>\n                    View Scan Results\n                    </Button>\n                        </ThemeProvider>\n                    </Grid>\n                </div>\n                \n            </div>\n     <div style={{display:\"flex\",alignItems:\"center\", justifyContent:\"center\"}}>\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Scanning Form\n      </Typography>\n      <div style={{display:\"flex\",alignItems:\"center\", justifyContent:\"center\"}}>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n\n      <div className=\"row\">\n      <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Repositry Name\"\n          helperText=\"Please enter repositry name\"\n          value={repositryName}\n          onChange={handleRepositryNameChange}\n          variant=\"outlined\"\n        />\n         <TextField\n          id=\"outlined-select-currency-native\"\n          select\n          label=\"Status\"\n          value={status}\n          onChange={handleStatus}\n          SelectProps={{\n            native: true,\n          }}\n          helperText=\"Please select status\" \n          variant=\"outlined\"\n        >\n          {Constants.STATUS.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n     \n        \n      </div>    \n      <Card className={classes.root} >\n      <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n           {'Findings' + ' - ' + findings.length}\n      </Typography>\n      <div className=\"row\">\n      <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Path\"\n          helperText=\"Please enter path\"\n          value={path}\n          onChange={handlePathChange}\n          variant=\"outlined\"\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Line Number\"\n          type=\"number\"\n          helperText=\"Please enter line number\"\n          value={lineNumber}          \n          onChange={handleLineNumberChange}\n          variant=\"outlined\"\n        />\n      </div>\n       <div className=\"row\">\n       <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Rule Id\"\n          helperText=\"Please enter rule id\"\n          value={ruleId}\n          onChange={handleRuleIdChange}\n          variant=\"outlined\"\n\n        />\n       <TextField\n          id=\"outlined-select-currency-native\"\n          select\n          label=\"Severity\"\n          value={severity}\n          onChange={handleSeverity}\n          SelectProps={{\n            native: true,\n          }}\n          helperText=\"Please select Severity\"\n          variant=\"outlined\"\n        >\n          {Constants.SEVERITY.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n       \n       </div>\n       <div className=\"row\">\n       <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Type\"\n          helperText=\"Please enter type\"\n          value={type}\n          onChange={handleTypeChange}\n          variant=\"outlined\" \n        />\n      <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Description\"\n          helperText=\"Please enter description\"\n          multiline\n          rows={4}\n          value={description}\n          onChange={handleDescrptionChange}\n          variant=\"outlined\"\n        />\n       \n        \n      </div>\n      <div style={{display:\"flex\",alignItems:\"center\", justifyContent:\"flex-end\"}}>\n           <Button variant=\"outlined\" disabled={(description && severity && lineNumber && path && ruleId && type) !== '' ? false : true} color=\"primary\" onClick={() => handleAddFindings()}>Add Findings</Button>\n       </div>\n      </CardContent>\n      </Card>\n       <div style={{display:\"flex\",alignItems:\"center\", justifyContent:\"flex-end\", paddingTop:10}}>\n           <Button  variant=\"contained\" color=\"primary\"   disabled={findings.length>0 && repositryName !=='' && status ? false : true} onClick={() => handleSubmitButton()}>Submit</Button>\n       </div>\n       </form>\n       </div>   \n      </CardContent>\n    </Card>\n    </div>     \n   \n    </div>\n\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Badge from '@material-ui/core/Badge';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Header from '../Header/Header'\nimport axios from 'axios';\nimport { IconContext } from 'react-icons';\n\nimport { MdMoreHoriz} from 'react-icons/md';\n  import Menu from '@material-ui/core/Menu';\n  import MenuItem from '@material-ui/core/MenuItem';\nimport {FiEdit, FiDelete} from 'react-icons/fi';\nconst menuTheme = createMuiTheme({  shadows: [\"none\"]});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n    padding: 20\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 22,\n    fontWeight:'bold',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  form:{\n    '& .MuiTextField-root': {\n      margin: theme.spacing(2),\n      width: '25ch',\n    },\n  },\n}));\n\nconst dummy =[\n  {\n      \"_id\": \"\",\n      \"user_id\": \"\",\n      \"phone\": \"\",\n      \"email\": \"\",\n      \"email_verified\": \"\",\n      \"roles\":\"\",\n      \"updated_at\": new Date(),\n      \"findings\":{\n        \"type\":\"\"\n      }\n\n  }\n];\n\n\nexport default function ScanFormPage(props) {\n  const classes = useStyles();\n \n  const [table, setTable] = useState(dummy);\n  const [tableShow,setTableShow] = useState(true);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [editResult, setEdit] = useState('')\n  const [currentItem, setCurrentItem] = useState('')\n  const [show, setShow] = useState(false);\n\n  const handleModalClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  useEffect(() => {\n\n    fetchData()\n  \n  }, []);\n  \n  async function fetchData(){\n      try{\n          let response  = await axios.get('http://localhost:5000/fetchAllScanResult')\n          if(response.data.length>0){\n            setTableShow(true);\n            setTable(response.data)\n          } else setTableShow(false)\n         \n      } catch(err){\n          console.log(err)\n      }\n     \n  }\n  function handleScanIdClick(item){\n    props.history.push({pathname:'/view-scan-result/'+item.scanId});\n  \n  }\n  function handleEdit(){\n    setAnchorEl(null);\n    setShow(true)\n  }\n  async function handleDeleteScanResult(){\n    let config = {\n      params:{\n        scanId:currentItem.scanId\n      }\n    }\n    try{\n      let response  = await axios.delete('http://localhost:5000/deleteScanResult', config)\n      fetchData()\n      setAnchorEl(null);\n\n\n    } catch(err){\n        console.log(err)\n    }\n  }\n  function handleClose(){\n    setAnchorEl(null);\n  \n  }\n\n  function handleClickEllipsis(event,item)\n  {\n    setAnchorEl(event.currentTarget);\n    setCurrentItem(item);\n\n  }\n  function renderBasedOnTable(){\n      \n    if(tableShow){\n      let filteredData = [];\n      table.map(item => {\n          filteredData.push(item);\n      }) \n      return(\n        <div className=\"tableAndPagination\">\n        <div style={{paddingTop:0,marginTop:0}}>\n     <div >\n\n     {filteredData.map(item=>{\n\n          return(\n            <div>\n              <Grid container spacing={0}>\n\n\n<Grid  className=\"mobileHide\" item md={2  } xs={4} style={{backgroundColor:'#fff'}}>\n          <ListItem style={{textAlign:'center',  cursor:'pointer'}}  alignItems=\"flex-start\">\n                  <ListItemText  style={{paddingTop:12}}\n                  primary={item.repositoryName}\n                  />\n              </ListItem>\n\n          </Grid>\n          <Grid  item md={2} xs={6} style={{backgroundColor:'#fff'}}>\n          <ListItem style={{textAlign:'center',  cursor:'pointer'}}  alignItems=\"flex-start\">\n                  <ListItemText  style={{paddingTop:12}}\n                  primary={item.status}\n                  />\n              </ListItem>\n\n          </Grid>\n          <Grid  item md={1} xs={6} style={{backgroundColor:'#fff'}}>\n            <div onClick={()=>handleScanIdClick(item)} style={{textAlign:'center',  cursor:'pointer', paddingTop:12}}>\n            <Badge badgeContent={item.findings.length} color=\"primary\">\n                    <FileCopyIcon />\n            </Badge>\n            </div>\n         \n\n          </Grid>\n        \n\n     \n\n\n     <Grid   item md={3} className=\"mobileHide\">\n      <ListItem  style={{textAlign:'center',  cursor:'pointer'}} alignItems=\"flex-start\">\n                  <ListItemText  style={{paddingTop:12}}\n                  primary={item.status === 'QUEUED' ? 'Queued At - ' + new Date(parseInt(item.queuedAt)).toLocaleString()\n                  : item.status === 'SUCCESS' || item.status === 'FAILURE' ? 'Finished At - ' +  new Date(parseInt(item.finishedAt)).toLocaleString(): 'Scanning At - ' + new Date(parseInt(item.scanningAt)).toLocaleString()}\n                  />\n              </ListItem>\n      </Grid>\n\n      <Grid className=\"mobileHide\" item md={1} style={{backgroundColor:'#fff'}} >\n    <ListItem style={{justifyContent:'center',paddingTop:26,textAlign:'center'}}>\n    <div>\n  \n    <IconContext.Provider value={{size:\"1.5em\"}}>\n              <div aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={(e)=>handleClickEllipsis(e,item)} >\n              <MdMoreHoriz/>\n              </div>\n\n    </IconContext.Provider>\n       \n       <ThemeProvider theme={menuTheme}>\n        <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div style={{boxShadow:\"6px 6px 2px 1px rgba(0, 0, 255, .2)\"}}>\n          <Card>\n{/* \n        <MenuItem onClick={() => handleEdit(item)} className={classes.menu} >\n          \n          <Grid container direction=\"row\" spacing={1}>\n          <Grid item xs>\n          <FiEdit/>\n          </Grid>\n          <Grid item xs>\n                <div style={{marginLeft:10}}>\n            Edit\n          </div>\n          </Grid>\n          </Grid></MenuItem> */}\n        <MenuItem item className={classes.menu} >\n          <div > \n          <Grid container spacing={1} direction=\"row\" onClick={()=>handleDeleteScanResult(item)}  >\n          <Grid item xs>\n          <FiDelete/>\n          </Grid>\n          <Grid item xs>\n                <div style={{}}>\n            Delete\n          </div>\n          </Grid>\n          </Grid>\n          </div>\n          </MenuItem>\n\n          </Card>\n\n          </div>\n      </Menu>  \n      </ThemeProvider> \n        \n          \n     </div>\n\n      </ListItem>\n    </Grid>\n      \n          </Grid>\n          <div>\n          <Divider style={{width:'80%'}}/>\n          </div>\n         \n          </div>\n          );\n\n          })\n          }\n\n\n  </div>\n    </div>\n\n\n\n\n\n      </div>\n      );\n    }else{\n      return(\n        <div style={{display:'flex', justifyContent:'center', paddingTop:20}}>\n          No Result Found\n        </div>\n      )\n    }\n  \n  }\n\n\n\n  return (\n   \n\n    <div>\n\n    <Header/>\n    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                <div className=\"backbutton\" style={{ padding:16 }}>\n                    <Grid item xs>\n\n                        <ThemeProvider >\n\n                            <Button style={{ textTransform: \"none\", fontSize: \"1em\" }} className={classes.button} onClick={() => props.history.push('/add-scanning-result')} variant=\"outlined\" color=\"primary\" >\n                                <IconContext.Provider value={{ size: \"1.5em\" }}>\n                                    <AddIcon />\n                                </IconContext.Provider>\n                    Add Scan Result\n                    </Button>\n                        </ThemeProvider>\n                    </Grid>\n                </div>\n                \n            </div>\n    <Card className={classes.root} >\n      <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Scan Results\n      </Typography>\n    <Grid container spacing={2} style={{width:'100%',paddingLeft:20,paddingTop:15}}>\n\n\n\n    <Grid className=\"headings\" container spacing={0}>\n      <Grid  item className=\"mobileHide\" md={2} xs={6}>\n        <ListItem style={{backgroundColor:'#fff',textAlign:'center', fontWeight:400}}><ListItemText primary={\n            <React.Fragment>\n            <Typography\n                variant=\"h6\"\n                color=\"textPrimary\"\n            >\n           Repository Name\n            </Typography>\n\n            </React.Fragment>\n        }></ListItemText></ListItem>\n      </Grid>\n   <Grid  item  md={2} xs={6} >\n        <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n            <React.Fragment>\n            <Typography\n                variant=\"h6\"\n\n                color=\"textPrimary\"\n            >\n           Scan Status\n            </Typography>\n\n            </React.Fragment>\n        }></ListItemText></ListItem>\n      </Grid>\n      <Grid  item md={1} xs={3}>\n      <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n            <React.Fragment>\n            <Typography\n                variant=\"h6\"\n                color=\"textPrimary\"\n            >\n            Findings\n            </Typography>\n\n            </React.Fragment>\n        }></ListItemText></ListItem>\n      </Grid>\n     \n      <Grid item md={3}  className=\"mobileHide\">\n      <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n            <React.Fragment>\n            <Typography\n                variant=\"h6\"\n                color=\"textPrimary\"\n            >\n              Time Stamp\n            </Typography>\n\n            </React.Fragment>\n        }></ListItemText></ListItem>\n      </Grid>\n      <Grid  item className=\"mobileHide\" md={1} xs={6}>\n        <ListItem style={{backgroundColor:'#fff',textAlign:'center', fontWeight:400}}><ListItemText primary={\n            <React.Fragment>\n            <Typography\n                variant=\"h6\"\n                color=\"textPrimary\"\n            >\n           Action\n            </Typography>\n\n            </React.Fragment>\n        }></ListItemText></ListItem>\n      </Grid>\n    </Grid>\n    </Grid>\n    {renderBasedOnTable()}\n    </CardContent>\n\n    </Card>\n\n    </div>\n\n  );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Header from '../Header/Header'\n\nimport axios from 'axios';\nimport { IconContext } from 'react-icons';\nimport { Card } from \"react-bootstrap\";\nimport CardContent from '@material-ui/core/CardContent';\nimport { MdKeyboardBackspace } from 'react-icons/md';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 22,\n    fontWeight:'bold'\n  },\n \n  form:{\n    '& .MuiTextField-root': {\n      margin: theme.spacing(2),\n      width: '25ch',\n    },\n    maxWidth:'80%'\n  },\n}));\n\nconst dummy =[\n  {\n    \"type\": '',\n    \"ruleId\": '',\n    \"location\": {\n      \"path\": '',\n      \"positions\": {\n        \"begin\": {\n          \"line\": ''\n        }\n      }\n    },\n    \"metadata\": {\n      \"description\": '',\n      \"severity\": ''\n    }\n\n  }\n];\n\n\nexport default function ScanFormPage(props) {\n  const classes = useStyles();\n  const [table, setTable] = useState(dummy);\n  const [tableShow,setTableShow] = useState(true);\n \n  useEffect(() => {\n\n    let paramScanId = props.match.params.scanId;\n    fetchScanResult(paramScanId)\n\n  \n  }, []);\n  \n  async function fetchScanResult(paramScanId){\n    let config = {\n    params: {\n      scanId: paramScanId\n    }\n}\n      try{\n          let response  = await axios.get('http://localhost:5000/fetchScanResultBaseOnId', config)\n           console.log(response.data.findings)\n           setTableShow(true);\n           setTable(response.data.findings)\n       \n      } catch(err){\n          console.log(err)\n      }\n      \n  }\n\n\n  function renderBasedOnTable(){\n      \n    if(tableShow){\n      let filteredData = [];\n      table.map(item => {\n          filteredData.push(item);\n      }) \n      return(\n        <div className=\"tableAndPagination\">\n        <div style={{paddingTop:0,marginTop:0}}>\n     <div >\n\n     {filteredData.map(item=>{\n\n          return(\n            <div>\n              <Grid container spacing={0}>\n\n\n<Grid  className=\"mobileHide\" item md={2} xs={4} style={{backgroundColor:'#fff'}}>\n          <ListItem style={{textAlign:'center',  cursor:'pointer'}}  alignItems=\"flex-start\">\n                  <ListItemText  style={{paddingTop:12}}\n                  primary={item.ruleId}\n                  />\n              </ListItem>\n\n          </Grid>\n          <Grid  item md={3} xs={6} style={{backgroundColor:'#fff'}}>\n          <ListItem style={{textAlign:'center',  cursor:'pointer'}}  alignItems=\"flex-start\">\n                  <ListItemText style={{paddingTop:12}}\n                  primary={item.metadata.description}\n                  />\n              </ListItem>\n\n          </Grid>\n          <Grid  item md={2} xs={6} style={{backgroundColor:'#fff'}}>\n          <ListItem style={{textAlign:'center',  cursor:'pointer'}}  alignItems=\"flex-start\">\n                  <ListItemText  style={{paddingTop:12}}\n                  primary={item.metadata.severity}\n                  />\n              </ListItem>\n\n          </Grid>\n        \n\n     \n\n\n     <Grid   item md={3} className=\"mobileHide\">\n      <ListItem  style={{textAlign:'center',  cursor:'pointer'}} alignItems=\"flex-start\">\n                  <ListItemText  style={{paddingTop:12}}\n                  primary={item.location.path + ' - ' + item.location.positions.begin.line}\n                  />\n              </ListItem>\n      </Grid>\n\n\n      \n          </Grid>\n          \n          <div>\n          <Divider />\n          </div>\n         \n          </div>\n          \n          );\n\n          })\n          \n          }\n    \n\n  </div>\n    </div>\n      </div>\n      );\n    }\n  \n  }\n\n\n  return (\n      \n    <div>\n\n    <Header/>\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                <div className=\"backbutton\" style={{ padding:16 }}>\n                    <Grid item xs>\n\n                        <ThemeProvider >\n\n                            <Button style={{ textTransform: \"none\", fontSize: \"1em\" }} className={classes.button} onClick={() => props.history.push('/scan-results')} variant=\"contained\" color=\"primary\" >\n                                <IconContext.Provider value={{ size: \"1.5em\" }}>\n                                    <MdKeyboardBackspace />\n                                </IconContext.Provider>\n                    Back\n                    </Button>\n                        </ThemeProvider>\n                    </Grid>\n                </div>\n                \n            </div>\n\n            <Divider/>\n            <div>\n            <Card className={classes.root} variant=\"outlined\">\n      <CardContent>  \n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Findings\n      </Typography>\n<Grid container spacing={2} style={{width:'100%',paddingLeft:20,}}>\n<Grid className=\"headings\" container spacing={0}>\n<Grid  item  md={2} xs={6}>\n            <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n                <React.Fragment>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                >\n               Rule Id\n                </Typography>\n                </React.Fragment>\n            }></ListItemText></ListItem>\n          </Grid>\n          <Grid  item  md={3} xs={6}>\n            <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n                <React.Fragment>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                >\n               Description\n                </Typography>\n                </React.Fragment>\n            }></ListItemText></ListItem>\n          </Grid>\n          <Grid  item  md={2} xs={6}>\n            <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n                <React.Fragment>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                >\n               Severity\n                </Typography>\n                </React.Fragment>\n            }></ListItemText></ListItem>\n          </Grid>\n          <Grid  item  md={3} xs={6}>\n            <ListItem style={{backgroundColor:'#fff',textAlign:'center'}}><ListItemText primary={\n                <React.Fragment>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                >\n               Path Name : Line Number\n                </Typography>\n                </React.Fragment>\n            }></ListItemText></ListItem>\n          </Grid>\n\n</Grid>\n</Grid>\n{renderBasedOnTable()}\n</CardContent>\n</Card>\n</div>\n    </div>\n  );\n}","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from 'react';\nimport { Redirect, Route, Switch, BrowserRouter as Router} from \"react-router-dom\";\nimport './App.css';\nimport FormPage from '../src/components/ScanFormPage/ScanFormPage'\nimport FormResults from '../src/components/ScanResultsPage/ScanResultsPage'\nimport ViewScanResult from '../src/components/ViewScanResult/ViewScanResult'\nimport history from './utils/history'\nfunction App() {\n  return (\n    <div >\n       {/* <FormPage/> */}\n       <Router history={history}>\n            <Switch>\n      \n                <Route path=\"/scan-results\" exact component={FormResults} />\n\n                <Route path =\"/add-scanning-result\" exact component={FormPage} />\n\n                <Route path=\"/view-scan-result/:scanId\" component={ViewScanResult}/>\n\n\n                <Redirect to=\"/add-scanning-result\"/> \n                <Route path=\"/\" exact component={FormPage} />\n                <Redirect to=\"/\" />\n            </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n    SEVERITY : [\n        {\n            value: 'LOW',\n            label: 'Low',\n        },\n        {\n          value: 'MEDIUM',\n          label: 'Medium',\n        },\n        {\n            value: 'HIGH',\n            label: 'High',\n        },\n      ],\n    \n     STATUS :[\n        {\n          value: 'QUEUED',\n          label: 'Queued',\n        },\n        {\n          value: 'IN PROGRESS',\n          label: 'In Progress',\n        },\n        {\n          value: 'SUCCESS',\n          label: 'Success',\n        },\n        {\n            value: 'FAILURE',\n            label: 'Failure',\n        },\n      ]\n}\n"],"sourceRoot":""}